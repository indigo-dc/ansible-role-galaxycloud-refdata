#!/usr/bin/env python
# ELIXIR-ITALY
# INDIGO-DataCloud
# IBIOM-CNR
#
# Contributors:
# author: Tangaro Marco
# email: ma.tangaro@ibiom.cnr.it

# Imports
import os, sys
import argparse
import subprocess

try:
  import ConfigParser
except ImportError:
  import configparser

# Custom libraries
from galaxyctl_libs import __version__
from galaxyctl_libs import bcolors
from galaxyctl_libs import OneDataCtl

# Logging
import logging
logging.basicConfig(filename='/var/log/galaxy/galaxyctl.log', format='%(levelname)s %(asctime)s %(message)s', level=logging.DEBUG)

# Config files
onedatactl_config_file = '/etc/galaxy/onedatactl.ini'

#______________________________________
def cli_options():
  parser = argparse.ArgumentParser(description='Onedata connection script')
  parser.add_argument('action', choices=['mount','umount','status'], nargs='?', help='Mount/umount data')
  parser.add_argument('data', choices=['userdata','refdata'], nargs='?', help='Select data to mount/umount')
  parser.add_argument('-t', '--token', dest='token', help='Set access token')
  parser.add_argument('-H', '--provider', dest='provider', help='Set provider')
  parser.add_argument('-m', '--mountpoint', dest='mountpoint', help='Set mountpoint')
  parser.add_argument('-c', dest='config_file', help='Load configuration file')
  parser.add_argument('--insecure', action='store_true', help='Allow insecure connection')
  parser.add_argument('--nonempty', action='store_true', help='Allow mount spaces to non empty directories')
  parser.add_argument('-V', '--version', action='store_true', dest='version', default=False, help='Print galaxyctl_libs version')
  return parser.parse_args()

#______________________________________
def check_oneclient():
  try:
    subprocess.call(['oneclient', '--version'])
  except OSError as e:
    if e.errno == os.errno.ENOENT:
      # handle oneclient not found error.
      logging.error('[onedatactl]  Oneclient is not installed.')
      print '[Error] Oneclient is not installed on your system. Please install it: https://onedata.org/docs/doc/using_onedata/oneclient.html'
    else:
      # Something else went wrong while trying to run `wget`
      raise Exception('Unable to test oneclient')

#______________________________________
def check_file(fname):
  try:
    with open(fname) as f:
      logging.info('[onedatactl] onedatactl_config_file: %s' % onedatactl_config_file)
      f.close()
      return True
  except IOError as e:
    raise Exception('No %s configuration file found.' % fname)

  if par:
    connect(par[1], par[2], par[0])
  else:
    return

#______________________________________
def check_mountpoint(data, mountpoint):

  if os.path.ismount(mountpoint) is True:
    print '[onedatactl] ' + data + ' mounted to ' + mountpoint + ': ' + bcolors.status_ok
  else:
    print '[onedatactl] ' + mountpoint + ' is not a mountpoint for ' + data + ': ' + bcolors.status_fail

#______________________________________
def onedatactl():

  if not os.geteuid() == 0:
    sys.exit('[Error] Script must be run as root.')

  options = cli_options()

  if options.version is True:
    print('Galaxyctl library: ' + __version__)
    return

  check_oneclient()

  # Check configuration file
  if options.config_file: 
    global onedatactl_config_file
    onedatactl_config_file = options.config_file
  check_file(onedatactl_config_file) 

  data = OneDataCtl(onedatactl_config_file, options.data)

  if options.action == 'mount': data.mount_space()

  if options.action == 'umount': data.umount_space()

  if options.action == 'status': check_mountpoint(options.data, data.get_mountpoint())


#______________________________________
if __name__ == '__main__':
  onedatactl()
